spring:
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: ${MONGODB_NAME}
      auto-index-creation: true
  mail:
    host: smtp.gmail.com
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    bootstrap-servers: ${KAFKA_SERVER}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: weekly-sentiment-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: net.raju.journalApp.model
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username ='${KAFKA_USERNAME}' password='${KAFKA_PASSWORD}';
      session:
        timeout:
          ms: 45000




server:
  port: 8080
  servlet:
    context-path: /journal


weather:
  api:
    key: ${WEATHER_API_KEY}

#spring:
#  profiles:
#    active: prod
#

